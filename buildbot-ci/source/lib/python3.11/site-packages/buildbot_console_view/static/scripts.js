!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("angular-animate"),require("@uirouter/angularjs"),require("guanlecoja-ui"),require("buildbot-data-js")):"function"==typeof define&&define.amd?define("buildbot-console-view",["angular-animate","@uirouter/angularjs","guanlecoja-ui","buildbot-data-js"],t):"object"==typeof exports?exports["buildbot-console-view"]=t(require("angular-animate"),require("@uirouter/angularjs"),require("guanlecoja-ui"),require("buildbot-data-js")):e["buildbot-console-view"]=t(e["angular-animate"],e["@uirouter/angularjs"],e["guanlecoja-ui"],e["buildbot-data-js"])}("undefined"!=typeof self?self:this,(function(e,t,i,s){return function(e){var t={};function i(s){if(t[s])return t[s].exports;var r=t[s]={i:s,l:!1,exports:{}};return e[s].call(r.exports,r,r.exports,i),r.l=!0,r.exports}return i.m=e,i.c=t,i.d=function(e,t,s){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(i.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)i.d(s,r,function(t){return e[t]}.bind(null,r));return s},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=0)}([function(e,t,i){"use strict";i.r(t);i(1),i(2),i(3),i(4);angular.module("console_view",["ui.router","ui.bootstrap","ngAnimate","guanlecoja.ui","bbData"]).config(["$stateProvider","glMenuServiceProvider","bbSettingsServiceProvider",class ConsoleState{constructor(e,t,s){var r="console";t.addGroup({name:r,caption:"Console View",icon:"exclamation-circle",order:5});var a={group:r,caption:"Console View"},l={controller:"".concat(r,"Controller"),controllerAs:"c",template:i(5),name:r,url:"/".concat(r),data:a};e.state(l),s.addSettingsGroup({name:"Console",caption:"Console related settings",items:[{type:"integer",name:"buildLimit",caption:"Number of builds to fetch",default_value:200},{type:"integer",name:"changeLimit",caption:"Number of changes to fetch",default_value:30}]})}}]).controller("consoleController",["$scope","$q","$window","dataService","bbSettingsService","resultsService","$uibModal","$timeout",class Console{constructor(e,t,i,s,r,a,l,n){this.onChange=this.onChange.bind(this),this._onChange=this._onChange.bind(this),this.matchBuildWithChange=this.matchBuildWithChange.bind(this),this.makeFakeChange=this.makeFakeChange.bind(this),this.$scope=e,this.$window=i,this.$uibModal=l,this.$timeout=n,angular.extend(this,a);var o=r.getSettingsGroup("Console");if(this.buildLimit=o.buildLimit.value,this.changeLimit=o.changeLimit.value,this.dataAccessor=s.open().closeOnDestroy(this.$scope),this._infoIsExpanded={},this.$scope.all_builders=this.all_builders=this.dataAccessor.getBuilders(),this.$scope.builders=this.builders=[],"undefined"!=typeof Intl&&null!==Intl){var u=new Intl.Collator(void 0,{numeric:!0,sensitivity:"base"});this.strcompare=u.compare}else this.strcompare=function(e,t){return e<t?-1:e===t?0:1};this.$scope.builds=this.builds=this.dataAccessor.getBuilds({property:["got_revision"],limit:this.buildLimit,order:"-started_at"}),this.changes=this.dataAccessor.getChanges({limit:this.changeLimit,order:"-changeid"}),this.buildrequests=this.dataAccessor.getBuildrequests({limit:this.buildLimit,order:"-submitted_at"}),this.buildsets=this.dataAccessor.getBuildsets({limit:this.buildLimit,order:"-submitted_at"}),this.builds.onChange=this.onChange,this.changes.onChange=this.onChange,this.buildrequests.onChange=this.onChange,this.buildsets.onChange=this.onChange}onChange(e){0!==this.builds.length&&0!==this.all_builders.length&&this.changes.$resolved&&0!==this.buildsets.length&&0!==this.buildrequests&&null==this.onchange_debounce&&(this.onchange_debounce=this.$timeout(this._onChange,100))}_onChange(){var e,t;this.onchange_debounce=void 0;for(var i=0,s=Array.from(this.builds);i<s.length;i++)e=s[i],this.all_builders.get(e.builderid).hasBuild=!0;this.sortBuildersByTags(this.all_builders),null==this.changesBySSID&&(this.changesBySSID={}),null==this.changesByRevision&&(this.changesByRevision={});for(var r=0,a=Array.from(this.changes);r<a.length;r++)t=a[r],this.changesBySSID[t.sourcestamp.ssid]=t,this.changesByRevision[t.revision]=t,this.populateChange(t);for(var l=0,n=Array.from(this.builds);l<n.length;l++)e=n[l],this.matchBuildWithChange(e);for(var o in this.filtered_changes=[],this.changesBySSID){(t=this.changesBySSID[o]).comments&&(t.subject=t.comments.split("\n")[0]);for(var u=0,d=Array.from(t.builders);u<d.length;u++){if(d[u].builds.length>0){this.filtered_changes.push(t);break}}}}sortBuildersByTags(e){for(var t=[],i="",s=0,r=Array.from(e);s<r.length;s++){var a=r[s];a.hasBuild&&(t.push(a),i+=".".concat(a.builderid))}if(i!==this.last_builderids_with_builds){for(var l=this._sortBuildersByTags(t),n=[],o=[],u=function(e,t,i){var s=n[e];if(null==s)s=n[e]=[];else{var r=s[s.length-1];if(r.tag===t)return void(r.colspan+=i)}return s.push({tag:t,colspan:i})},d=this,h=function e(t,i){if(u(i,t.tag,t.builders.length),null!=t.tag_line&&0!==t.tag_line.length)return Array.from(t.tag_line).map(t=>e(t,i+1));t.builders.sort((e,t)=>d.strcompare(e.name,t.name)),o=o.concat(t.builders);for(var s=1;s<=100;s++)u(i+s,"",t.builders.length)},c=0,g=Array.from(l);c<g.length;c++)h(g[c],0);this.builders=o,this.tag_lines=[];for(var b=0,p=Array.from(n);b<p.length;b++)1===(l=p[b]).length&&""===l[0].tag||this.tag_lines.push(l);return this.last_builderids_with_builds=i}}_sortBuildersByTags(e){for(var t,i,s,r={},a=0,l=Array.from(e);a<l.length;a++)if(null!=(t=l[a]).tags)for(var n=0,o=Array.from(t.tags);n<o.length;n++)null==r[s=o[n]]&&(r[s]=[]),r[s].push(t);var u=[];for(s in r)(i=r[s]).length<e.length&&u.push({tag:s,builders:i});u.sort((e,t)=>t.builders.length-e.builders.length);for(var d=[],h={},c=0,g=Array.from(u);c<g.length;c++){s=g[c];for(var b=!1,p=0,m=Array.from(s.builders);p<m.length;p++)if(t=m[p],h.hasOwnProperty(t.builderid)){b=!0;break}if(!b){for(var f=0,v=Array.from(s.builders);f<v.length;f++)h[(t=v[f]).builderid]=s.tag;d.push(s)}}for(var y=[],_=0,w=Array.from(e);_<w.length;_++)t=w[_],h.hasOwnProperty(t.builderid)||y.push(t);if(y.length&&d.push({tag:"",builders:y}),d.length>1)for(var B=0,C=Array.from(d);B<C.length;B++)(s=C[B]).tag_line=this._sortBuildersByTags(s.builders);return d}populateChange(e){e.builders=[],e.buildersById={};for(var t=0,i=Array.from(this.builders);t<i.length;t++){var s=i[t];s={builderid:s.builderid,name:s.name,builds:[]},e.builders.push(s),e.buildersById[s.builderid]=s}}matchBuildWithChange(e){var t,i,s=this.buildrequests.get(e.buildrequestid);if(null!=s){var r=this.buildsets.get(s.buildsetid);if(null!=r){if(null!=r&&null!=r.sourcestamps)for(var a=0,l=Array.from(r.sourcestamps);a<l.length;a++){var n=l[a];if(null!=(t=this.changesBySSID[n.ssid]))break}if(null==t&&null!=(null!=e.properties?e.properties.got_revision:void 0)){var o=e.properties.got_revision[0];if("string"==typeof o)null==(t=this.changesByRevision[o])&&(t=this.makeFakeChange("",o,e.started_at));else{var u;for(u in o)if(i=o[u],null!=(t=this.changesByRevision[i]))break;null==t&&(i=o==={}?"":o[Object.keys(o)[0]],t=this.makeFakeChange(u,i,e.started_at))}}return null==t&&(i="unknown revision ".concat(e.builderid,"-").concat(e.buildid),t=this.makeFakeChange("unknown codebase",i,e.started_at)),t.buildersById[e.builderid].builds.push(e)}}}makeFakeChange(e,t,i){var s=this.changesBySSID[t];return null==s&&(s={codebase:e,revision:t,changeid:t,when_timestamp:i,author:"unknown author for ".concat(t),comments:t+"\n\nFake comment for revision: No change for this revision, please setup a changesource in Buildbot"},this.changesBySSID[t]=s,this.populateChange(s)),s}openAll(){return Array.from(this.filtered_changes).map(e=>e.show_details=!0)}closeAll(){return Array.from(this.filtered_changes).map(e=>e.show_details=!1)}getRowHeaderWidth(){return this.hasExpanded()?400:200}getColHeaderHeight(){for(var e=0,t=0,i=Array.from(this.builders);t<i.length;t++){var s=i[t];e=Math.max(s.name.length,e)}return Math.max(100,3*e)}isBigTable(){var e=this.getRowHeaderWidth();return(this.$window.innerWidth-e)/this.builders.length<40}hasExpanded(){for(var e=0,t=Array.from(this.changes);e<t.length;e++){var i=t[e];if(this.infoIsExpanded(i))return!0}return!1}selectBuild(e){return this.$uibModal.open({template:i(6),controller:"consoleModalController as modal",windowClass:"modal-big",resolve:{selectedBuild:()=>e}})}toggleInfo(e){return e.show_details=!e.show_details}infoIsExpanded(e){return e.show_details}}]),i(7)},function(t,i){t.exports=e},function(e,i){e.exports=t},function(e,t){e.exports=i},function(e,t){e.exports=s},function(e,t){e.exports=window.T["console_view/views/console.html"]||'<div class="console"><div class="load-indicator" ng-hide="c.builds.$resolved &amp;&amp; c.changes.$resolved &amp;&amp; c.buildrequests.$resolved &amp;&amp; c.buildsets.$resolved"><div class="spinner"><i class="fa fa-circle-o-notch fa-spin fa-2x"></i><p>loading</p></div></div><div ng-show="c.changes.$resolved &amp;&amp; c.filtered_changes.length==0"><p>No changes. Console view needs changesource to be setup, and<a href="#changes">changes</a>to be in the system.</p></div><table class="table table-striped table-bordered" ng-hide="c.filtered_changes.length==0" ng-class="{\'table-fixedwidth\': c.isBigTable()}"><tr class="first-row"><th class="row-header" ng-style="{\'width\': c.getRowHeaderWidth()}"><i class="fa fa-plus-circle pull-left" ng-click="c.openAll()" uib-tooltip="Open information for all changes" uib-tooltip-placement="right"></i><i class="fa fa-minus-circle pull-left" ng-click="c.closeAll()" uib-tooltip="Close information for all changes" uib-tooltip-placement="right"></i></th><th class="column" ng-repeat="builder in c.builders"><span class="builder" ng-style="{\'margin-top\': c.getColHeaderHeight()}"><a ng-href="#/builders/{{ builder.builderid }}" ng-bind="builder.name"></a></span></th></tr><tr class="tag_row" ng-repeat="tag_line in c.tag_lines"><td class="row-header"></td><td ng-repeat="tag in tag_line" colspan="{{tag.colspan}}"><span uib-tooltip="{{ tag.tag }}" ng-style="{width: tag.colspan*50}">{{tag.tag}}</span></td></tr><tr ng-repeat="change in c.filtered_changes | orderBy: [\'-when_timestamp\'] track by change.changeid"><td><changedetails change="change"></changedetails></td><td class="column" ng-repeat="builder in change.builders" title="{{builder.name}}"><span ng-repeat="build in builder.builds | orderBy: [\'number\']"><script type="text/ng-template" id="buildsummarytooltip"><buildsummary buildid="build.buildid" type="tooltip"></buildsummary><\/script><span class="badge-status" ng-if="build.buildid" uib-tooltip-template="\'buildsummarytooltip\'" tooltip-class="buildsummarytooltipstyle" tooltip-placement="auto left-bottom" tooltip-popup-delay="400" tooltip-popup-close-delay="400" ng-class="c.results2class(build, \'pulse\')" ng-click="c.selectBuild(build)">{{ build.number }}</span></span></td></tr></table></div>'},function(e,t){e.exports=window.T["console_view/views/modal.html"]||'\x3c!-- Show build summary for the selected build in a modal window--\x3e<div class="modal-header"><i class="fa fa-times pull-right" ng-click="modal.close()"></i><h4 class="modal-title">Build summary</h4></div><div class="modal-body"><buildsummary ng-if="modal.selectedBuild" buildid="modal.selectedBuild.buildid"></buildsummary></div>'},function(e,t){angular.module("console_view").controller("consoleModalController",["$scope","$uibModalInstance","selectedBuild",class ConsoleModal{constructor(e,t,i){this.$uibModalInstance=t,this.selectedBuild=i,e.$on("$stateChangeStart",()=>this.close())}close(){return this.$uibModalInstance.close()}}])}])}));
//# sourceMappingURL=scripts.js.map