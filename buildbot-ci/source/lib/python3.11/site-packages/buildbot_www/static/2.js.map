{"version":3,"sources":["webpack://buildbot-www/./node_modules/d3/d3.js"],"names":["__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3","version","d3_arraySlice","slice","d3_array","list","call","d3_document","this","document","d3_documentElement","node","ownerDocument","documentElement","d3_window","defaultView","childNodes","nodeType","e","i","length","array","Array","Date","now","createElement","style","setProperty","error","d3_element_prototype","Element","prototype","d3_element_setAttribute","setAttribute","d3_element_setAttributeNS","setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","name","value","space","local","priority","d3_ascending","a","b","NaN","d3_number","x","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","arguments","mid","right","ascending","descending","min","f","n","max","extent","c","sum","s","mean","j","quantile","values","p","H","h","Math","floor","v","median","numbers","push","sort","variance","d","m","deviation","apply","sqrt","d3_bisect","d3_transposeLength","bisectLeft","bisect","bisectRight","bisector","shuffle","i0","i1","t","random","permute","indexes","permutes","pairs","p1","transpose","matrix","row","zip","keys","map","key","entries","merge","arrays","merged","abs","d3_range_integerScale","k","d3_class","ctor","properties","Object","defineProperty","enumerable","d3_Map","_","create","range","start","stop","step","Infinity","Error","object","forEach","set","isArray","o","d3_map_escape","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","target","source","method","d3_vendorSymbol","charAt","toUpperCase","d3_vendorPrefixes","prefixName","has","get","remove","empty","nest","sortValues","rollup","sortKeys","mapType","depth","keyValue","setter","valuesByKey","sortKey","keyMap","order","add","behavior","rebind","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","listeners","listenerByName","event","l","z","on","listener","indexOf","concat","d3_eventPreventDefault","preventDefault","d3_eventSource","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","hasOwnProperty","requote","replace","d3_requote_re","d3_subclass","__proto__","property","d3_selection","groups","d3_selectionPrototype","d3_select","querySelector","d3_selectAll","querySelectorAll","d3_selectMatches","d3_selectMatcher","matches","Sizzle","matchesSelector","selection","select","d3_selection_selector","selector","d3_selection_selectorAll","subgroup","subnode","group","subgroups","parentNode","__data__","selectAll","d3_nsXhtml","d3_nsPrefix","svg","xhtml","xlink","xml","xmlns","d3_selection_attr","ns","qualify","removeAttributeNS","removeAttribute","d3_collapse","trim","d3_selection_classedRe","RegExp","d3_selection_classes","split","d3_selection_classed","d3_selection_classedName","re","classList","getAttribute","lastIndex","test","d3_selection_style","removeProperty","d3_selection_property","d3_selection_creator","createElementNS","namespace","namespaceURI","d3_selectionRemove","parent","removeChild","d3_selection_dataNode","data","d3_selection_filter","d3_selection_sortComparator","comparator","d3_selection_each","callback","d3_selection_enter","d3_selection_enterPrototype","prefix","attr","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","text","textContent","html","innerHTML","append","appendChild","insert","before","insertBefore","bind","groupData","nodeData","n0","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","update","enter","exit","datum","filter","next","nextSibling","args","d3_selection_enterInsertBefore","j0","d3_selection_on","capture","wrap","d3_selection_onListener","d3_selection_onFilters","onRemove","removeEventListener","$","d3_selection_onFilter","addEventListener","match","upgroup","nodes","mouseenter","mouseleave","related","relatedTarget","compareDocumentPosition","d3_event_dragSelect","d3_event_dragId","d3_event_dragSuppress","click","w","suppressClick","off","setTimeout","mouse","container","d3_mousePoint","d3_mouse_bug44083","navigator","userAgent","changedTouches","ownerSVGElement","createSVGPoint","point","window","scrollX","scrollY","ctm","position","top","margin","padding","border","getScreenCTM","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","touch","touches","drag","origin","mousedown","dragstart","touchstart","id","subject","move","end","dragOffset","that","correspondingElement","dragged","dragId","dragName","dragSubject","moved","ended","dragRestore","position0","dx","dy","position1","ε","ε2","π","PI","τ","τε","halfπ","d3_radians","d3_degrees","d3_sgn","d3_cross2d","d3_acos","acos","d3_asin","asin","d3_cosh","exp","d3_haversin","sin","ρ","SQRT2","interpolateZoom","p0","S","ux0","uy0","w0","ux1","uy1","w1","d2","log","d1","b0","b1","r0","r1","coshr0","u","d3_sinh","duration","zoom","translate0","center0","center","mousewheelTimer","touchtime","x0","x1","y0","y1","view","scaleExtent","d3_behavior_zoomInfinity","zooming","mousemove","mouseup","g","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","scaleTo","translateTo","zoomTo","__chart__","pow","transition","rescale","domain","invert","zoomstarted","zoomed","scale","translate","zoomended","location0","d3_selection_interrupt","scale0","locations0","distance0","zoomName","touchmove","touchend","targets","relocate","started","changed","LN2","q","l0","l1","distance1","scale1","clearTimeout","d3_behavior_zoomDelta","shiftKey","ceil","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","tween","cx","cy","copy","d3_color","d3_hsl","d3_rgb_parse","d3_rgb_hsl","color","toString","rgb","hsl","d3_hslPrototype","d3_hsl_rgb","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab_hcl","d3_lab","d3_rgb_lab","r","brighter","darker","hcl","d3_hclPrototype","d3_hcl_lab","cos","d3_lab_K","lab","d3_labPrototype","d3_lab_rgb","d3_xyz_rgb","d3_lab_xyz","atan2","d3_xyz_lab","d3_rgbNumber","d3_rgbString","d3_rgbPrototype","d3_rgb_hex","format","exec","toLowerCase","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","xhr","headers","request","XMLHttpRequest","responseType","respond","result","status","responseText","d3_xhrHasResponse","load","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","send","open","setRequestHeader","overrideMimeType","beforesend","abort","d3_xhr_fixCallback","functor","dsv","delimiter","reFormat","delimiterCode","charCodeAt","typedResponse","parse","formatRow","formatValue","join","parseRows","Function","JSON","stringify","eol","EOL","EOF","rows","N","I","token","formatRows","fieldSet","fields","field","csv","tsv","d3_timer_queueHead","d3_timer_queueTail","d3_timer_interval","d3_timer_timeout","d3_timer_frame","d3_timer","delay","then","time","timer","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","d3_format_precision","LN10","flush","d3_formatPrefixes","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","width","substring","reverse","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","after","lastIndexOf","String","fromCharCode","X","toPrecision","toExponential","toFixed","d3_time","d3_date","d3_date_utc","UTC","getDate","getUTCDate","getDay","getUTCDay","getFullYear","getUTCFullYear","getHours","getUTCHours","getMilliseconds","getUTCMilliseconds","getMinutes","getUTCMinutes","getMonth","getUTCMonth","getSeconds","getUTCSeconds","getTime","getTimezoneOffset","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setFullYear","setUTCFullYear","setHours","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","d3_time_interval","number","date","d0","offset","dt","times","utc","d3_time_interval_utc","d3_locale_timeFormat","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","d3_time_format","template","string","d3_time_formatPads","d3_time_formats","M","L","Z","d3_time_parse","localZ","W","U","d3_time_parsers","multi","d3_time_formatMulti","d3_time_periodLookup","d3_time_dayRe","d3_time_formatRe","d3_time_dayLookup","d3_time_formatLookup","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_monthRe","d3_time_monthLookup","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","A","B","d3_time_formatPad","dayOfYear","sundayOfYear","mondayOfYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","year","day","years","interval","week","sunday","weeks","weekOfYear","-","0","d3_time_numberRe","d3_time_percentRe","names","zs","zh","zm","formats","numberFormat","timeFormat","d3_locale_enUS","d3_adder","geo","d3_adderSum","d3_adderTemp","reset","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","stream","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","sphere","Point","coordinates","MultiPoint","LineString","d3_geo_streamLine","MultiLineString","Polygon","d3_geo_streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","area","d3_geo_areaSum","d3_geo_area","d3_geo_centroidW0","d3_geo_centroidW1","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_areaRingSum","d3_geo_areaRingStart","λ00","φ00","λ0","cosφ0","sinφ0","nextPoint","λ","φ","dλ","sdλ","adλ","cosφ","sinφ","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","bounds","φ0","λ1","φ1","λ_","λ__","φ__","dλSum","ranges","bound","ringPoint","ringStart","ringEnd","linePoint","normal","inflection","λi","antimeridian","φi","angle","compareRanges","withinRange","best","centroid","d3_geo_centroid","d3_geo_centroidPoint","d3_geo_centroidLineStart","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","d3_geo_centroidPointXYZ","z0","cz","d3_geo_compose","compose","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","clip","segment","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","entry","points","current","isSubject","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","line","rotatedClipStart","pointRing","polygon","meridian","parallel","meridianNormal","polarAngle","winding","ring","point0","arc","intersection","φarc","d3_geo_pointInPolygon","polygonStarted","d3_geo_clipSort","pointLine","buffer","d3_geo_clipBufferListener","ringListener","clean","ringSegments","pop","shift","d3_geo_clipSegmentLength1","lines","rejoin","d3_geo_clipAntimeridian","sλ0","sλ1","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianIntersect","from","to","direction","d3_geo_clipCircle","radius","cr","smallRadius","notHemisphere","visible","c0","v0","v00","point2","point1","code","intersect","d3_geo_circleInterpolate","two","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","δλ","polar","q1","d3_geom_clipLine","ax","ay","d3_geo_clipExtent","x__","y__","v__","x_","y_","v_","first","listener_","bufferListener","wn","insidePolygon","inside","a1","corner","comparePoints","ca","cb","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","C","ρ0","forward","ρ0_y","clipExtent","output","valid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathAreaPolygon","d3_geo_pathBoundsX0","d3_geo_pathBoundsY0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY1","d3_geo_pathArea","d3_geo_pathAreaRingStart","x00","y00","d3_geo_pathBounds","d3_geo_pathBuffer","pointCircle","d3_geo_pathBufferCircle","pointLineStart","lineEndPolygon","pointRadius","d3_geo_lengthSum","d3_geo_pathCentroid","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","δ2","cosMinDistance","maxDepth","resample","resampleRecursive","resampleNone","d3_geo_transformPoint","a00","b00","c00","a0","resampleLineTo","φ2","λ2","x2","y2","dx2","dy2","dz","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projectRotate","δx","δy","projectResample","δφ","δγ","preclip","postclip","clipAngle","projection","d3_geo_rotation","invalidate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","path","projectStream","contextStream","cacheStream","transform","methods","projectionMutator","equirectangular","circle","distance","Δλ","sinΔλ","cosΔλ","sinφ1","graticule","X1","X0","Y1","Y0","DX","DY","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","d3_geo_conicConformal","F","d3_geo_mercator","d3_geo_conicEquidistant","G","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","d3_geo_mercatorProjection","clipAuto","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","stereographic","transverseMercator","geom","vertices","fx","fy","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","input","d3_geom_voronoiEdges","d3_geom_voronoiCells","d3_geom_voronoiBeaches","d3_geom_voronoiFirstCircle","d3_geom_voronoiCircles","d3_geom_voronoiBeachPool","d3_geom_voronoiCirclePool","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiRemoveBeach","vertex","previous","P","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","lSite","bx","by","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ha","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","d3_geom_voronoiEdge","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","splice","d3_geom_voronoiClipEdges","cell","iHalfEdge","halfEdges","nHalfEdges","cells","iCell","prepare","d3_geom_voronoiCloseCells","diagram","grandpa","uncle","sibling","voronoi","d3_geom_voronoiClipExtent","polygons","links","triangles","s0","s1","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","root","closestPoint","minDistance2","find","distance2","xm","ym","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","delaunay","quadtree","compat","xs","ys","x1_","y1_","x2_","y2_","leaf","nx","ny","insertChild","nPoint","below","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolators","d3_interpolateArray","na","nb","interpolateArray","d3_ease_default","d3_ease","linear","poly","quad","d3_ease_quad","cubic","d3_ease_cubic","d3_ease_sin","d3_ease_exp","d3_ease_circle","elastic","back","bounce","d3_ease_bounce","d3_ease_mode","in","out","d3_ease_reverse","in-out","d3_ease_reflect","out-in","d3_ease_clamp","d3_ease_cubicInOut","t3","d3_interpolateRound","d3_transform","kx","d3_transformNormalize","kz","d3_transformDot","ky","skew","ease","interpolateHcl","ah","ac","al","bh","bc","bl","interpolateHsl","as","interpolateLab","aa","ba","interpolateRound","baseVal","consolidate","d3_transformIdentity","d3_interpolateTransformPop","d3_interpolateTransform","ta","tb","d3_interpolateTranslate","ra","rb","d3_interpolateRotate","wa","wb","d3_interpolateSkew","ka","kb","d3_interpolateScale","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","aNodes","d3_layout_bundleAncestors","bNodes","aNode","bNode","sharedNode","d3_layout_bundleLeastCommonAncestor","ancestors","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","interpolateTransform","layout","bundle","paths","chord","chords","sortGroups","sortSubgroups","sortChords","relayout","groupSums","groupIndex","subgroupIndex","di","dj","subindex","startAngle","endAngle","resort","force","alpha","distances","strengths","charges","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","charge","chargeDistance2","d3_layout_forceChargeDistance2","gravity","theta2","repulse","dw","dn","pointCharge","dragmove","resume","tick","weight","d3_layout_forceAccumulate","chargeDistance","theta","neighbors","dimension","candidates","d3_layout_hierarchyRebind","hierarchy","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","stack","childs","revalue","partition","pie","Number","d3_layout_pieSortByValue","padAngle","da","pa","arcs","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","d3_layout_stackMaxIndex","sums","d3_layout_stackReduceSum","bottom","tops","bottoms","default","silhouette","wiggle","s2","s3","o0","expand","zero","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","d3_layout_histogramBinFixed","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","d3_layout_packUnlink","db","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeAncestor","vim","ancestor","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","d3_scale_niceStep","d3_scale_niceIdentity","histogram","frequency","valuer","ranger","binner","bin","bins","thresholds","pack","d3_layout_packTransform","separation","nodeSize","root0","root1","node1","queue","wrapTree","firstWalk","secondWalk","sizeNode","tx","siblings","d3_layout_treeShift","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","cluster","previousNode","d3_layout_clusterX","d3_layout_clusterY","d3_layout_clusterLeft","d3_layout_clusterRight","treemap","stickies","pad","sticky","mode","ratio","squarify","score","remaining","worst","stickify","rmax","rmin","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","d3_scale_polylinear","d3_scale_linearRebind","d3_scale_linearNice","d3_scale_linearTickRange","span","err","d3_scale_linearTicks","d3_scale_linearTickFormat","d3_scale_linearPrecision","d3_scale_linearFormatSignificant","d3_scale_linearFormatPrecision","d3_scale_linear","clamp","rangeRound","ticks","tickFormat","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_powPow","d3_scale_pow","powp","powb","ordinal","d3_scale_ordinal","rangeBand","steps","xi","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","d3_zero","d3_scale_quantile","quantiles","invertExtent","quantize","d3_scale_quantize","threshold","d3_scale_threshold","identity","d3_scale_identity","innerRadius","d3_svg_arcInnerRadius","outerRadius","d3_svg_arcOuterRadius","cornerRadius","padRadius","d3_svg_arcAuto","d3_svg_arcStartAngle","d3_svg_arcEndAngle","d3_svg_arcPadAngle","cw","rc","circleSegment","rp","ap","d3_svg_arcSweep","h1","h0","rc1","rc0","oc","kc","lc","t30","d3_svg_arcCornerTangents","t12","t03","t21","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","defined","d3_svg_lineLinear","interpolateKey","tension","d3_svg_lineInterpolators","linear-closed","d3_svg_lineLinearClosed","step-before","d3_svg_lineStepBefore","step-after","d3_svg_lineStepAfter","basis","d3_svg_lineBasis","basis-open","pi","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","basis-closed","cardinal","d3_svg_lineHermite","d3_svg_lineCardinalTangents","cardinal-open","cardinal-closed","monotone","tangents","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","lp","p2","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineRadial","d3_svg_area","interpolateReverse","points0","points1","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","radial","curve","self","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionNamespace","d3_transitionInherit","d3_transitionNode","d3_transition","interrupt","d3_selection_interruptNS","lock","activeId","active","count","d3_transitionPrototype","d3_transition_tween","d3_transition_text","inherit","tweens","elapsed","cancelId","cancel","subnodes","nameNS","attrNull","attrNullNS","attrTween","attrTweenNS","styleNull","styleString","styleTween","inheritId","id0","id1","axis","tickFormat_","orient","d3_svg_axisDefaultOrient","innerTickSize","outerTickSize","tickPadding","tickArguments_","tickValues","tickTransform","tickEnter","tickExit","tickUpdate","tickSpacing","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","d3_svg_axisX","d3_svg_axisY","d3_svg_axisOrients","tickSize","tickSubdivide","brush","xExtentDomain","yExtentDomain","xExtent","yExtent","xClamp","yClamp","resizes","d3_svg_brushResizes","brushstart","background","resize","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","eventTarget","event_","resizing","resizingX","resizingY","dragging","keydown","keyup","brushmove","brushend","ex","ey","altKey","keyCode","move1","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","d3_time_formatIsoNative","toISOString","d3_time_scale","tickMethod","d3_time_scaleSteps","d3_time_scaleMilliseconds","d3_time_scaleDate","skip","skipped","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","d3_json","d3_html","createRange","selectNode","body","createContextualFragment","json","responseXML","undefined","exports","__webpack_require__","module"],"mappings":"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","file":"2.js","sourcesContent":["!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();"],"sourceRoot":""}