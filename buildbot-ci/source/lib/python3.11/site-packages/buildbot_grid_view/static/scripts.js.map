{"version":3,"sources":["webpack://buildbot-grid-view/webpack/universalModuleDefinition","webpack://buildbot-grid-view/webpack/bootstrap","webpack://buildbot-grid-view/./src/module/main.module.js","webpack://buildbot-grid-view/external \"angular-animate\"","webpack://buildbot-grid-view/external \"guanlecoja-ui\"","webpack://buildbot-grid-view/external \"buildbot-data-js\"","webpack://buildbot-grid-view/./src/module/grid.tpl.jade","webpack://buildbot-grid-view/./src/module/grid.controller.js"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","angular","config","GridState","constructor","$stateProvider","glMenuServiceProvider","bbSettingsServiceProvider","addGroup","caption","icon","order","state","controller","controllerAs","template","url","reloadOnSearch","data","group","addSettingsGroup","items","type","defaultValue","default_value","window","T","Grid","$scope","$stateParams","$state","resultsService","dataService","bbSettingsService","onChange","changeBranch","changeResult","toggleTag","resetTags","refresh","isBuilderDisplayed","isTagToggled","_","mixin","open","closeOnDestroy","branch","tags","tag","isArray","result","results","resultsTexts","push","code","text","settings","getSettingsGroup","revisionLimit","changeFetchLimit","buildFetchLimit","fullChanges","leftToRight","buildsets","getBuildsets","limit","changes","getChanges","builders","getBuilders","buildrequests","getBuildrequests","builds","getBuilds","change","dataReady","_i","_arr","length","collection","$resolved","dataFetched","_i2","_arr2","bset","req","builder","branches","changesBySSID","_i3","_Array$from","Array","from","sourcestamp","ssid","_i4","_Array$from2","last","sourcestamps","bsid","changeid","_i5","_Object$keys","keys","cid","sort","a","b","slice","result1","br","requestsByBSID","_i6","_Array$from3","buildsetid","buildsByReqID","_i7","_Array$from4","build","buildrequestid","_i8","_Array$from5","buildersById","_i9","_Array$from6","_i11","_Object$keys3","requests","_i12","_Array$from7","isNaN","parseInt","splice","builderid","result2","_i10","_Object$keys2","indexOf","params","undefined","transitionTo","current","notify","_i13","_Array$from8"],"mappings":"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","file":"scripts.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular-animate\"), require(\"guanlecoja-ui\"), require(\"buildbot-data-js\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"buildbot-grid-view\", [\"angular-animate\", \"guanlecoja-ui\", \"buildbot-data-js\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"buildbot-grid-view\"] = factory(require(\"angular-animate\"), require(\"guanlecoja-ui\"), require(\"buildbot-data-js\"));\n\telse\n\t\troot[\"buildbot-grid-view\"] = factory(root[\"angular-animate\"], root[\"guanlecoja-ui\"], root[\"buildbot-data-js\"]);\n})((typeof self !== 'undefined' ? self : this), function(__WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__2__, __WEBPACK_EXTERNAL_MODULE__3__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// This file is part of Buildbot.  Buildbot is free software: you can\n// redistribute it and/or modify it under the terms of the GNU General Public\n// License as published by the Free Software Foundation, version 2.\n//\n// This program is distributed in the hope that it will be useful, but WITHOUT\n// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n// FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more\n// details.\n//\n// You should have received a copy of the GNU General Public License along with\n// this program; if not, write to the Free Software Foundation, Inc., 51\n// Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n//\n// Copyright Buildbot Team Members\n\nimport 'angular-animate';\nimport 'guanlecoja-ui';\nimport 'buildbot-data-js';\n\nclass GridState {\n    constructor($stateProvider, glMenuServiceProvider, bbSettingsServiceProvider) {\n        // Menu configuration\n        glMenuServiceProvider.addGroup({\n            name: 'grid',\n            caption: 'Grid View',\n            icon: 'cubes',\n            order: 4\n        });\n\n        // Register URL routing\n        $stateProvider\n            .state({\n                name: 'grid',\n                controller: 'gridController',\n                controllerAs: 'C',\n                template: require('./grid.tpl.jade'),\n                url: '/grid?branch&tag&result',\n                reloadOnSearch: false,\n                data: {\n                    group: 'grid',\n                    caption: 'Grid View'\n                }\n            });\n\n        bbSettingsServiceProvider.addSettingsGroup({\n            name: 'Grid',\n            caption: 'Grid related settings',\n            items: [{\n                    type: 'bool',\n                    name: 'fullChanges',\n                    caption: 'Show avatar and time ago in change details',\n                    defaultValue: false\n                }\n                , {\n                    type: 'bool',\n                    name: 'leftToRight',\n                    caption: 'Show most recent changes on the right',\n                    defaultValue: false\n                }\n                , {\n                    type: 'integer',\n                    name: 'revisionLimit',\n                    caption: 'Maximum number of revisions to display',\n                    default_value: 5\n                }\n                , {\n                    type: 'integer',\n                    name: 'changeFetchLimit',\n                    caption: 'Maximum number of changes to fetch',\n                    default_value: 100\n                }\n                , {\n                    type: 'integer',\n                    name: 'buildFetchLimit',\n                    caption: 'Maximum number of builds to fetch',\n                    default_value: 1000\n                }\n            ]\n        });\n    }\n}\n\n\nangular.module('grid_view', [\n    'ui.router', 'ui.bootstrap', 'ngAnimate', 'guanlecoja.ui', 'bbData'])\n.config(['$stateProvider', 'glMenuServiceProvider', 'bbSettingsServiceProvider', GridState]);\n\nrequire('./grid.controller.js');\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","module.exports = window.T['grid_view/views/grid.html'] || \"<div class=\\\"container grid\\\"><div class=\\\"load-indicator\\\" ng-hide=\\\"C.dataFetched()\\\"><div class=\\\"spinner\\\"><i class=\\\"fa fa-circle-o-notch fa-spin fa-2x\\\"></i><p>loading</p></div></div><p ng-show=\\\"C.dataFetched() &amp;&amp; C.changes.length == 0\\\">No changes. Grid View needs a changesource to be setup, and<a href=\\\"#/changes\\\"> changes</a> to be in the system.</p><div class=\\\"form-inline\\\" ng-show=\\\"C.dataReady()\\\"><div class=\\\"form-group\\\"><label>Branch</label><select class=\\\"form-control\\\" ng-model=\\\"C.branch\\\" ng-change=\\\"C.changeBranch(C.branch)\\\" ng-options=\\\"br for br in branches | orderBy\\\"><option value=\\\"\\\">(all)</option></select></div><div class=\\\"form-group\\\"><label>Results</label><select class=\\\"form-control\\\" ng-model=\\\"C.result\\\" ng-change=\\\"C.changeResult(C.result)\\\" ng-options=\\\"r.code as r.text for r in C.results\\\"><option value=\\\"\\\">(all)</option></select></div></div><table class=\\\"table table-condensed table-striped table-hover\\\" ng-show=\\\"C.dataReady()\\\"><thead><tr><th>Builder</th><th><span ng-show=\\\"C.tags.length == 0\\\">Tags</span><span ng-show=\\\"C.tags.length &lt; 5\\\" ng-repeat=\\\"tag in C.tags\\\"><span class=\\\"builder-tag label clickable label-success\\\" ng-click=\\\"C.toggleTag(tag)\\\">{{ tag }}</span></span><span ng-show=\\\"C.tags.length &gt;= 5\\\"><span class=\\\"label label-success\\\">{{ C.tags.length }} tags</span></span><span ng-show=\\\"C.tags.length &gt; 0\\\"><span class=\\\"label label-danger clickable\\\" ng-click=\\\"C.resetTags()\\\" uib-tooltip=\\\"Reset tags filter\\\">x</span></span></th><th class=\\\"change\\\" ng-repeat=\\\"ch in changes track by ch.changeid\\\"><changedetails change=\\\"ch\\\" compact=\\\"!C.fullChanges\\\"></changedetails></th></tr></thead><tbody><tr ng-repeat=\\\"b in builders | orderBy: 'name'\\\"><th><a ui-sref=\\\"builder({builder: b.builderid})\\\">{{ b.name }}</a></th><td><span ng-repeat=\\\"tag in b.tags\\\"><span class=\\\"builder-tag label clickable\\\" ng-click=\\\"C.toggleTag(tag)\\\" ng-class=\\\"C.isTagToggled(tag) ? 'label-success': 'label-default'\\\">{{ tag }}</span></span></td><td ng-repeat=\\\"ch in changes track by ch.changeid\\\"><a ng-repeat=\\\"build in b.builds[ch.changeid] | orderBy: 'buildid'\\\" ui-sref=\\\"build({builder: b.builderid, build: build.number})\\\"><script type=\\\"text/ng-template\\\" id=\\\"buildsummarytooltip\\\"><buildsummary buildid=\\\"build.buildid\\\" type=\\\"tooltip\\\"></buildsummary></script><span class=\\\"badge-status\\\" uib-tooltip-template=\\\"'buildsummarytooltip'\\\" tooltip-class=\\\"buildsummarytooltipstyle\\\" tooltip-placement=\\\"auto left-bottom\\\" tooltip-popup-delay=\\\"400\\\" tooltip-popup-close-delay=\\\"400\\\" ng-class=\\\"results2class(build, 'pulse')\\\">{{ build.number }}</span></a></td></tr></tbody></table></div>\";","/*\n * decaffeinate suggestions:\n * DS101: Remove unnecessary use of Array.from\n * DS102: Remove unnecessary code created because of implicit returns\n * DS203: Remove `|| {}` from converted for-own loops\n * DS205: Consider reworking code to avoid use of IIFEs\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\n// This file is part of Buildbot.  Buildbot is free software: you can\n// redistribute it and/or modify it under the terms of the GNU General Public\n// License as published by the Free Software Foundation, version 2.\n//\n// This program is distributed in the hope that it will be useful, but WITHOUT\n// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n// FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more\n// details.\n//\n// You should have received a copy of the GNU General Public License along with\n// this program; if not, write to the Free Software Foundation, Inc., 51\n// Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n//\n// Copyright Buildbot Team Members\n\nclass Grid {\n    constructor($scope, $stateParams, $state, resultsService, dataService, bbSettingsService) {\n        this.onChange = this.onChange.bind(this);\n        this.changeBranch = this.changeBranch.bind(this);\n        this.changeResult = this.changeResult.bind(this);\n        this.toggleTag = this.toggleTag.bind(this);\n        this.resetTags = this.resetTags.bind(this);\n        this.refresh = this.refresh.bind(this);\n        this.isBuilderDisplayed = this.isBuilderDisplayed.bind(this);\n        this.isTagToggled = this.isTagToggled.bind(this);\n        this.$scope = $scope;\n        this.$stateParams = $stateParams;\n        this.$state = $state;\n        _.mixin(this.$scope, resultsService);\n        this.data = dataService.open().closeOnDestroy(this.$scope);\n\n        this.branch = this.$stateParams.branch;\n        this.tags = this.$stateParams.tag != null ? this.$stateParams.tag : [];\n        if (!angular.isArray(this.tags)) {\n            this.tags = [this.tags];\n        }\n        this.result = this.$stateParams.result;\n        // XXX: Angular ngOptions tag only works with string values. Force\n        // convert the result code to string.\n        this.results = ((() => {\n            const result = [];\n            for (let c in resultsService.resultsTexts) {\n                const t = resultsService.resultsTexts[c];\n                result.push({code: c + '', text: t});\n            }\n            return result;\n        })());\n\n        const settings = bbSettingsService.getSettingsGroup('Grid');\n        this.revisionLimit = settings.revisionLimit.value;\n        this.changeFetchLimit = settings.changeFetchLimit.value;\n        this.buildFetchLimit = settings.buildFetchLimit.value;\n        this.fullChanges = settings.fullChanges.value;\n        this.leftToRight = settings.leftToRight.value;\n\n        this.buildsets = this.data.getBuildsets({\n            limit: this.buildFetchLimit,\n            order: '-bsid'\n        });\n        this.changes = this.data.getChanges({\n            limit: this.changeFetchLimit,\n            order: '-changeid'\n        });\n        this.builders = this.data.getBuilders();\n        this.buildrequests = this.data.getBuildrequests({\n            limit: this.buildFetchLimit,\n            order: '-buildrequestid'\n        });\n        this.builds = this.data.getBuilds({\n            limit: this.buildFetchLimit,\n            order: '-buildrequestid'\n        });\n\n        this.buildsets.onChange = this.onChange;\n        this.changes.onChange = this.onChange;\n        this.builders.onChange = this.onChange;\n        this.buildrequests.change = this.onChange;\n        this.builds.onChange = this.onChange;\n    }\n\n    dataReady() {\n        for (let collection of [this.buildsets, this.changes, this.builders, this.buildrequests, this.builds]) {\n            if (!(collection.$resolved && (collection.length > 0))) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    dataFetched() {\n        for (let collection of [this.buildsets, this.changes, this.builders, this.buildrequests, this.builds]) {\n            if (!collection.$resolved) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    onChange() {\n        let bset, c, req;\n        let change, i, builder;\n        if (!this.dataReady()) {\n            return;\n        }\n\n        let changes = {};\n        const branches = {};\n\n        // map changes by source stamp id\n        const changesBySSID = {};\n        for (c of Array.from(this.changes)) {\n            changesBySSID[c.sourcestamp.ssid] = c;\n            c.buildsets = {};\n        }  // there can be multiple buildsets by change\n\n        // associate buildsets to each change and remember existing branches\n        for (bset of Array.from(this.buildsets)) {\n            change = changesBySSID[_.last(bset.sourcestamps).ssid];\n            if (change == null) {\n                continue;\n            }\n\n            change.buildsets[bset.bsid] = bset;\n            if (change.branch == null) { change.branch = 'master'; }\n            branches[change.branch] = true;\n\n            if (this.branch && (change.branch !== this.branch)) {\n                continue;\n            }\n\n            changes[change.changeid] = change;\n        }\n\n        // only keep the @revisionLimit most recent changes for display\n        changes = ((() => {\n            const result = [];\n            for (let cid of Object.keys(changes || {})) {\n                change = changes[cid];\n                result.push(change);\n            }\n            return result;\n        })());\n        if (this.leftToRight) {\n            changes.sort((a, b) => a.changeid - b.changeid);\n            if (changes.length > this.revisionLimit) {\n                changes = changes.slice(changes.length - this.revisionLimit);\n            }\n        } else {\n            changes.sort((a, b) => b.changeid - a.changeid);\n            if (changes.length > this.revisionLimit) {\n                changes = changes.slice(0, this.revisionLimit);\n            }\n        }\n        this.$scope.changes = changes;\n\n        this.$scope.branches = ((() => {\n            const result1 = [];\n            for (let br in branches) {\n                result1.push(br);\n            }\n            return result1;\n        })());\n\n        const requestsByBSID = {};\n        for (req of Array.from(this.buildrequests)) {\n            (requestsByBSID[req.buildsetid] != null ? requestsByBSID[req.buildsetid] : (requestsByBSID[req.buildsetid] = [])).push(req);\n        }\n        const buildsByReqID = {};\n        for (let build of Array.from(this.builds)) {\n            // There may be multiple builds for a given request\n            // (for example when a worker connection is lost).\n            (buildsByReqID[build.buildrequestid] != null ? buildsByReqID[build.buildrequestid] : (buildsByReqID[build.buildrequestid] = [])).push(build);\n        }\n\n        for (builder of Array.from(this.builders)) {\n            builder.builds = {};\n        }\n\n        const buildersById = {};\n        // find builds for the selected changes and associate them to builders\n        for (c of Array.from(this.$scope.changes)) {\n            for (let bsid of Object.keys(c.buildsets || {})) {\n                bset = c.buildsets[bsid];\n                const requests = requestsByBSID[bsid];\n                if (requests == null) {\n                    continue;\n                }\n                for (req of Array.from(requests)) {\n                    const builds = buildsByReqID[req.buildrequestid] != null ? buildsByReqID[req.buildrequestid] : [];\n                    if ((this.result != null) && (this.result !== '') && !isNaN(this.result)) {\n                        i = 0;\n                        while (i < builds.length) {\n                            if (parseInt(builds[i].results) !== parseInt(this.result)) {\n                                builds.splice(i, 1);\n                            } else {\n                                i += 1;\n                            }\n                        }\n                    }\n                    if (!(builds.length > 0)) {\n                        continue;\n                    }\n                    builder = this.builders.get(builds[0].builderid);\n                    if (!this.isBuilderDisplayed(builder)) {\n                        continue;\n                    }\n                    buildersById[builder.builderid] = builder;\n                    builder.builds[c.changeid] = builds;\n                }\n            }\n        }\n\n        return this.$scope.builders = ((() => {\n            const result2 = [];\n            for (i of Object.keys(buildersById || {})) {\n                builder = buildersById[i];\n                result2.push(builder);\n            }\n            return result2;\n        })());\n    }\n\n    changeBranch(branch) {\n        this.branch = branch;\n        return this.refresh();\n    }\n\n    changeResult(result) {\n        this.result = result;\n        return this.refresh();\n    }\n\n    toggleTag(tag) {\n        const i = this.tags.indexOf(tag);\n        if (i < 0) {\n            this.tags.push(tag);\n        } else {\n            this.tags.splice(i, 1);\n        }\n        return this.refresh();\n    }\n\n    resetTags() {\n        this.tags = [];\n        return this.refresh();\n    }\n\n    refresh() {\n        const params = {\n            branch: this.branch,\n            tag: this.tags.length === 0 ? undefined : this.tags,\n            result: this.result\n        };\n\n        // change URL without reloading page\n        this.$state.transitionTo(this.$state.current, params, {notify: false});\n        this.onChange();\n    }\n\n    isBuilderDisplayed(builder) {\n        for (let tag of Array.from(this.tags)) {\n            if (builder.tags.indexOf(tag) < 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    isTagToggled(tag) {\n        return this.tags.indexOf(tag) >= 0;\n    }\n}\n\n\nangular.module('grid_view')\n.controller('gridController', ['$scope', '$stateParams', '$state', 'resultsService', 'dataService', 'bbSettingsService', Grid]);\n"],"sourceRoot":""}